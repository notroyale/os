#include <stdio.h>
#include <dirent.h>
#include <stdlib.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <dlfcn.h>



int kp_test_open(const char *name);
int kp_test_close(int fd);

int kp_test_open(const char *name){
   int dskr;
   dskr = open( name, O_RDONLY );
   if( dskr == -1 ){
      perror( name );
      exit(1);
   }
   printf( "dskr = %d\n", dskr );
   return dskr;

}

int kp_test_close(int fd){
   int rv;
   rv = close( fd );
   if( rv != 0 ) perror ( "close() failed" );
   else puts( "closed" );
   return rv;
}

int is_regular_file(const char *path)
{
    struct stat path_stat;
    stat(path, &path_stat);
    return S_ISREG(path_stat.st_mode);
}


int main (int argc, char *argv[])
{
 int d;
 DIR *dir;
 struct  dirent *ent;
 if( argc != 2 ) {
   printf("Netinkamas arg kiekis");
   exit(255); }
// d = kp_test_openw( argv[1] );
 if ((dir = opendir (argv[1])) != NULL) {
 while ((ent = readdir (dir)) != NULL) {
    if (1 == S_ISREG(ent))
    printf ("%s\n", ent->d_name);
  }
 closedir (dir);
  }
 //kp_test_close( d );
